{"version":3,"file":"app.js","sources":["../../libraries/x-element/x-element.js","../../elements/x-screen/x-state.js","../../elements/x-screen/x-screen.js","../../elements/x-screen/x-screen-fit.js","../../elements/x-screen/x-app-screen.js","verify/elements/screen-welcome/screen-welcome.js","verify/elements/screen-terms/screen-terms.js","../../libraries/nimiq-utils/activation-utils/activation-utils.js","../../elements/x-activation-utils/x-activation-utils.js","../../elements/screen-error/screen-error.js","verify/elements/screen-form-handler/screen-form/x-country-select/x-country-select.js","verify/elements/screen-form-handler/screen-form/x-dateofbirth-select/x-dateofbirth-select.js","verify/elements/screen-form-handler/screen-form/screen-form.js","verify/elements/screen-form-handler/screen-confirm/screen-confirm.js","../../elements/screen-loading/screen-loading.js","../../libraries/nimiq-utils/form-to-object/form-to-object.js","verify/elements/screen-form-handler/screen-form-handler.js","../../elements/x-success-mark/x-success-mark.js","../../elements/screen-success/screen-success.js","verify/elements/screen-proceed/screen-proceed.js","verify/elements/app/app.js"],"sourcesContent":["export default class XElement {\n    /**\n     * Creates an instance of XElement.\n     * @param {XElement | Element | null} parent\n     * @memberof XElement\n     */\n    constructor(parent) {\n        this.__bindDOM(parent);\n        this.__createChildren();\n        this.$el.xDebug = this; // This DOM-Element gets a reference to this XElement (nice for debugging)\n        if (this.onCreate) this.onCreate();\n    }\n\n    /**\n     * \n     * \n     * @param {XElement | Element | null} parent\n     * @memberof XElement\n     */\n    __bindDOM(parent) {\n        if (parent instanceof XElement) this.$el = parent.$(this.__tagName); // query in parent for tag name\n        else if (parent instanceof Element) this.$el = parent; // The parent is this DOM-Element\n        else this.$el = document.querySelector(this.__tagName); // query in document for tag name\n        this.__fromHtml();\n        this.__bindStyles(this.styles);\n    }\n\n    /**\n     * \n     * \n     * @returns \n     * @memberof XElement\n     */\n    __createChildren() { // Create all children recursively\n        if (!this.children) return;\n        this.children().forEach(child => this.__createChild(child));\n    }\n\n    /**\n     * \n     * \n     * @param {XElement | XElement[]} child\n     * @returns {void}\n     * @memberof XElement\n     */\n    __createChild(child) { // bind all this.$myChildElement = new MyChildElement(this);\n        if (child instanceof Array) return this.__createArrayOfChild(child[0]);\n        this[child.__toChildName()] = new child(this);\n    }\n\n    /**\n     * \n     * \n     * @param {XElement} child\n     * @memberof XElement\n     */\n    __createArrayOfChild(child) {\n        const name = child.__toChildName() + 's';\n        const tagName = XElement.__toTagName(child.name);\n        const children = this.$$(tagName);\n        this[name] = [];\n        children.forEach(c => this[name].push(new child(c)));\n    }\n    /**\n     * \n     * \n     * @static\n     * @param {string} str\n     * @returns {string}\n     * @memberof XElement\n     */\n    static camelize(str) {\n        return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, (match) => {\n            if (+match === 0) return '';// or if (/\\s+/.test(match)) for white spaces\n            return match.toUpperCase();\n        });\n    }\n\n    /**\n     * \n     * \n     * @static\n     * @returns {string}\n     * @memberof XElement\n     */\n    static __toChildName() {\n        let name = this.name;\n        if (name.match(/^X[A-Z][a-z]*/)) name = name.substring(1); // replace XAnyConstructorName -> AnyConstructorName\n        return '$' + name[0].toLowerCase() + name.substring(1); // AnyConstructorName -> $anyConstructorName\n    }\n\n    /**\n     * \n     * \n     * @returns \n     * @memberof XElement\n     */\n    __fromHtml() {\n        if (!this.html) return;\n        const html = this.html().trim();\n        const currentContent = this.$el.innerHTML.trim();\n        this.$el.innerHTML = html;\n        if (currentContent === '') return;\n        const $content = this.$('[content]');\n        if (!$content) return;\n        $content.innerHTML = currentContent;\n        $content.removeAttribute('content');\n    }\n\n    /**\n     * \n     * \n     * @readonly\n     * @memberof XElement\n     */\n    get __tagName() { // The tagName of this DOM-Element\n        return XElement.__toTagName(this.constructor.name);\n    }\n\n    /**\n     * \n     * \n     * @static\n     * @param {string} name\n     * @returns \n     * @memberof XElement\n     */\n    static __toTagName(name) {\n        return name.split(/(?=[A-Z])/).join('-').toLowerCase(); // AnyConstructorName -> any-constructor-name\n    }\n\n    /**\n     * \n     * \n     * @static\n     * @returns \n     * @memberof XElement\n     */\n    static createElement() {\n        const name = this.__toTagName(this.name);\n        const element = document.createElement(name);\n        return new this(element);\n    }\n\n    /**\n     * \n     * \n     * @param {string} selector\n     * @returns {Element}\n     * @memberof XElement\n     */\n    $(selector) { return this.$el.querySelector(selector) } // Query inside of this DOM-Element\n\n    /**\n     * \n     * \n     * @param {string} selector\n     * @returns {Element[]}\n     * @memberof XElement\n     */\n    $$(selector) { return this.$el.querySelectorAll(selector) } // QueryAll inside of this DOM-Element\n    /**\n     * \n     * \n     * @memberof XElement\n     */\n    clear() { while (this.$el.firstChild) this.$el.removeChild(this.$el.firstChild) } // Clear all DOM-Element children\n\n    /**\n     * \n     * \n     * @param {string} type\n     * @param {function} callback\n     * @memberof XElement\n     */\n    addEventListener(type, callback) { this.$el.addEventListener(type, callback, false) }\n    /**\n     * \n     * \n     * @param {string} eventType\n     * @param {any} [detail=null] \n     * @param {boolean} [bubbles=true] \n     * @memberof XElement\n     */\n    fire(eventType, detail = null, bubbles = true) { // Fire DOM-Event\n        const params = { detail: detail, bubbles: bubbles };\n        this.$el.dispatchEvent(new CustomEvent(eventType, params));\n    }\n    /**\n     * \n     * \n     * @param {string} type\n     * @param {function} callback\n     * @param {Element | window} $el\n     * @memberof XElement\n     */\n    listenOnce(type, callback, $el) {\n        const listener = e => {\n            $el.removeEventListener(type, listener);\n            callback(e);\n        }\n        $el.addEventListener(type, listener, false);\n    }\n\n    /**\n     * \n     * \n     * @param {string} styleClass\n     * @memberof XElement\n     */\n    addStyle(styleClass) { this.$el.classList.add(styleClass) }\n    /**\n     * \n     * \n     * @param {string} styleClass\n     * @memberof XElement\n     */\n    removeStyle(styleClass) { this.$el.classList.remove(styleClass) }\n    /**\n     * \n     * \n     * @param {() => string[]} styles\n     * @returns \n     * @memberof XElement\n     */\n    __bindStyles(styles) {\n        if (super.styles) super.__bindStyles(super.styles); // Bind styles of all parent types recursively\n        if (!styles) return;\n        styles().forEach(style => this.addStyle(style));\n    }\n\n    /**\n     * \n     * \n     * @param {string} className\n     * @param {Element | string} $el\n     * @param {() => void} afterStartCallback\n     * @param {() => void} beforeEndCallback\n     * @returns\n     * @memberof XElement\n     */\n    animate(className, $el, afterStartCallback, beforeEndCallback) {\n        const $screen = this;\n\n        return new Promise(resolve => {\n            $el = $el || this.$el;\n            // 'animiationend' is a native DOM event that fires upon CSS animation completion\n            this.listenOnce('animationend', e => {\n                if (e.target !== $el) return;\n                if (beforeEndCallback) beforeEndCallback();\n                this.stopAnimate(className, $el);\n                resolve();\n            }, $el);\n            $el.classList.add(className);\n            if (afterStartCallback) afterStartCallback();\n        })\n    }\n    /**\n     * \n     * \n     * @param {string} className\n     * @param {Element | string} $el\n     * @memberof XElement\n     */\n    stopAnimate(className, $el) {\n        $el = $el || this.$el;\n        $el.classList.remove(className);\n    }\n\n    types() {\n        /** @type{() => (typeof XElement)[]} */\n        this.children = null;\n        /** @type {string} */\n        this.name = null;\n        /** @types {() => string[]} */\n        this.styles = null;\n    }\n}\n\n// Todo: Bug/Pitfall: When instantiating a screen twice on a path down a screen tree (e.g. loading), it has to be declared as an array on the higher level.","export default class XState {\n    constructor(path) {\n        /** @type {string} */\n        this._id = path[0];\n        /** @type {string} */\n        this._toString = path.join('/');\n        /** @type {string} */\n        const child = path.slice(1);\n        if (child.length && child[0]) this._child = new XState(child);\n        /** @type {boolean} */\n        this._isLeaf = !this._child;\n        this._path = path;\n    }\n\n    /** @returns {boolean} */\n    get isLeaf() { return this._isLeaf; }\n\n    /** @returns {string} */\n    get id() { return this._id; }\n\n    /** @returns {boolean} */\n    get isRoot() { return this.id === '' }\n\n    /** @returns {XState} */\n    get child() { return this._child; }\n\n    /** @returns {string[]} */\n    get path() { return JSON.parse(JSON.stringify(this._path)) }\n\n    /** @return {boolean} */\n    isEqual(otherState) {\n        return otherState && this.toString() === otherState.toString();\n    }\n\n    /** @return {boolean} */\n    isRootEqual(otherState) {\n        return otherState && this.id && this.id === otherState.id;\n    }\n\n    /** @return {string} */\n    toString() {\n        return this._toString;\n    }\n\n    /** @return {string[]} */\n    intersection(otherState) {\n        const intersection = [];\n        let state1 = this;\n        let state2 = otherState;\n        while (state1 && state2 && state1.id === state2.id) {\n            intersection.push(state1.id);\n            state1 = state1.child;\n            state2 = state2.child;\n        }\n        return intersection;\n    }\n\n    /** @return {string[]} */\n    difference(otherState) {\n        if (!otherState) return this.path;\n        const difference = [];\n        let state1 = this;\n        let state2 = otherState;\n        while (state1) {\n            if (!state2 || state1.id !== state2.id) difference.push(state1.id);\n            state1 = state1.child;\n            if (state2) state2 = state2.child;\n        }\n        return difference;\n    }\n\n    /** @param {string} fragment\n     *  @returns {XState}\n     */\n    static fromLocation(fragment) {\n        fragment = fragment || this._currFragment();\n        fragment = fragment[0] === '#' ? fragment.slice(1) : fragment;\n        return this.fromString(fragment);\n    }\n\n    /** @param {string} string\n     * @returns {XState}\n     */\n    static fromString(string) {\n        const path = string.split('/');\n        return new XState(path);\n    }\n\n    /** @param {string[]} route\n     *  @returns string */\n    static locationFromRoute(route) {\n        if (!route) return '';\n        if (route[0] === '/') return this._locationFromAbsoluteRoute(route);\n        if (route.indexOf('./') === 0) return this._locationFromSubroute(route);\n        return this._locationFromRelativeRoute(route);\n    }\n\n    /** @param {string[]} route\n     *  @returns string */\n    static _locationFromRelativeRoute(route) {\n        const fragment = this._currFragment();\n        const path = fragment.split('/').filter(e => e);\n        path.pop();\n        path.push(route);\n        return '#' + path.join('/');\n    }\n\n    /** @param {string[]} route\n     *  @returns string */\n    static _locationFromSubroute(route) {\n        route = route.slice(2);\n        let fragment = this._currFragment();\n        let lastChar = fragment[fragment.length - 1];\n        if (!!fragment && lastChar !== '/') fragment += '/';\n        return '#' + fragment + route;\n    }\n\n    /** @param {string[]} route\n     *  @returns string */\n    static _locationFromAbsoluteRoute(route) {\n        return '#' + route.slice(1);\n    }\n\n    /** @returns string */\n    static _currFragment() {\n        let fragment = decodeURIComponent(location.hash.slice(1));\n        fragment = fragment.replace('#/', '#');\n        return fragment;\n    }\n}","import XElement from '/libraries/x-element/x-element.js';\nimport XState from './x-state.js';\n\nexport default class XScreen extends XElement {\n\n    types() {\n        /** @type {Map<string,XScreen>} */\n        this._childScreens = new Map();\n    }\n\n    constructor(parent) {\n        super(parent);\n        if (!parent) this._registerRootElement();\n        this._bindListeners();\n    }\n\n    _registerRootElement() {\n        XScreen._registerGlobalStateListener(this._onRootStateChange.bind(this));\n        this._show();\n    }\n\n    /**\n     *\n     * @param {XState} nextState\n     * @param {XState} prevState\n     * @param {boolean} isNavigateBack\n     * @returns {Promise<void>}\n     * @private\n     */\n    async _onRootStateChange(nextState, prevState, isNavigateBack) {\n        nextState = this._sanitizeState(nextState);\n        const intersection = nextState.intersection(prevState); // calc intersection common parent path\n        const nextStateDiff = nextState.difference(prevState);\n        const prevStateDiff = prevState && prevState.difference(nextState);\n        let parent = this;\n        intersection.forEach(childId => parent = parent._getChildScreen(childId)); // decent common path\n        let exitParent = prevStateDiff && parent._getChildScreen(prevStateDiff[0]);\n        if (exitParent) exitParent._exitScreens(prevStateDiff, nextState, prevState, isNavigateBack);\n        parent._entryScreens(nextStateDiff, nextState, prevState, isNavigateBack);\n        if (parent._onStateChange) parent._onStateChange(nextState);\n    }\n\n    _exitScreens(prevStateDiff, nextState, prevState, isNavigateBack) {\n        if (prevStateDiff && prevStateDiff.length > 1) {\n            const childScreen = this._getChildScreen(prevStateDiff[1]);\n            prevStateDiff = prevStateDiff.slice(1);\n            childScreen._exitScreens(prevStateDiff, nextState, prevState, isNavigateBack);\n        }\n        this.__onExit(nextState, prevState, isNavigateBack);\n    }\n\n    _entryScreens(nextStateDiff, nextState, prevState, isNavigateBack) {\n        this.__onEntry(nextState, prevState, isNavigateBack);\n        if (!nextStateDiff || !nextStateDiff.length) return;\n        const childScreen = this._getChildScreen(nextStateDiff[0]);\n        if (!childScreen) return;\n        const nextChildStateDiff = nextStateDiff.slice(1);\n        childScreen._entryScreens(nextChildStateDiff, nextState, prevState, isNavigateBack);\n    }\n\n    _sanitizeState(nextState) {\n        let parent = this;\n        while (nextState && !nextState.isRoot) {\n            const id = nextState.id;\n            parent = parent._getChildScreen(id);\n            nextState = nextState.child;\n        }\n        let child = parent;\n        while (child && child._getDefaultScreen()) {\n            child = child._getDefaultScreen();\n        }\n        const cleanState = XState.fromLocation(child._location);\n        history.replaceState(history.state, history.state, child._location);\n        XScreen.currState = cleanState;\n        return cleanState;\n    }\n\n    _getDefaultScreen() {\n        if (!this._childScreens) return;\n        return this._childScreens.values().next().value;\n    }\n\n    async __onEntry(nextState, prevState, isNavigateBack) {\n        if (this.isVisible) return;\n        if (this._onBeforeEntry) this._onBeforeEntry(nextState, prevState, isNavigateBack);\n        await this._animateEntry(isNavigateBack);\n        if (this._onEntry) await this._onEntry(nextState, prevState, isNavigateBack);\n        this._resolveGoTo();\n    }\n\n    _animateEntry(isNavigateBack) {\n        const afterStartCallback = () => { this._show(); };\n        if (!isNavigateBack)\n            return this.animate('x-entry-animation', null, afterStartCallback);\n        else\n            return this.animate('x-exit-animation-reverse', null, afterStartCallback);\n    }\n\n    async __onExit(nextState, prevState, isNavigateBack) {\n        if (!this.isVisible) return;\n        document.activeElement.blur();\n        if (this._onBeforeExit) this._onBeforeExit(nextState, prevState, isNavigateBack);\n        await this._animateExit(isNavigateBack);\n        if (this._onExit) await this._onExit(nextState, prevState, isNavigateBack);\n    }\n\n    _animateExit(isNavigateBack) {\n        const beforeEndCallback = () => { this._hide(); };\n        if (!isNavigateBack)\n            return this.animate('x-exit-animation', null, null, beforeEndCallback);\n        else\n            return this.animate('x-entry-animation-reverse', null, null, beforeEndCallback);\n    }\n\n    _show() {\n        this.$el.style.display = 'flex';\n        this.$el.offsetWidth; // Bugfix for FF: trigger layout and repaint\n        this._isVisible = true;\n    }\n\n    _hide() {\n        this.$el.style.display = 'none';\n        this._isVisible = false;\n    }\n\n    get isVisible() { return this._isVisible; }\n\n    get route() {\n        return this._route || this.$el.getAttribute('route') || this.__tagName.replace('screen-', '');\n    }\n\n    get _location() {\n        if (!this._parent) return;\n        if (!this._parent._location) return '#' + this.route;\n        return this._parent._location + '/' + this.route;\n    }\n\n    goTo(route) {\n        return new Promise(resolve => {\n            XScreen._goToResolve = resolve;\n            document.location = XState.locationFromRoute(route);\n        })\n    }\n\n    goToChild(route) {\n        document.location = this._location + '/' + route;\n    }\n\n    back() {\n        return new Promise(resolve => {\n            XScreen._goToResolve = resolve;\n            history.back();\n        });\n    }\n\n    _bindListeners() {\n        if (!this.listeners) return;\n        const listeners = this.listeners();\n        for (const key in listeners) {\n            this.addEventListener(key, e => this[listeners[key]](e.detail !== undefined ? e.detail : e));\n        }\n    }\n\n    _getChildScreen(id) {\n        if (!this._childScreens) return;\n        return this._childScreens.get(id);\n    }\n\n    __createChild(child) {\n        super.__createChild(child);\n        if (child instanceof Array) {\n            const name = child[0].__toChildName() + 's';\n            if (this[name][0] instanceof XScreen) this.__createChildScreens(child[0]);\n        } else {\n            const childScreen = this[child.__toChildName()];\n            if (childScreen instanceof XScreen) this.__createChildScreen(childScreen);\n        }\n    }\n\n    __createChildScreen(child) {\n        if (!this._childScreens) this._childScreens = new Map();\n        this._childScreens.set(child.route, child);\n        child._parent = this;\n    }\n\n    __createChildScreens(child) {\n        const name = child.__toChildName() + 's';\n\n        this[name].forEach(c => this.__createChildScreen(c));\n    }\n\n    __bindStyles(styles) {\n        super.__bindStyles(styles);\n        if (!this.styles) this.addStyle('x-screen');\n    }\n\n    _resolveGoTo() {\n        if (!XScreen._goToResolve) return;\n        XScreen._goToResolve();\n        XScreen._goToResolve = null;\n    }\n\n    _validateState(nextState, prevState, isNavigateBack) { return true /* Abstract Method */ }\n\n\n    /** @param {function} callback */\n    static _registerGlobalStateListener(callback) {\n        if (this._stateListener) return; // We register only the first screen calling. All other screens get notified by their parent\n        this._stateListener = window.addEventListener('popstate', e => this._onHistoryChange(callback));\n        this._onHistoryChange(callback, true);\n    }\n\n    /** @param {function} callback */\n    static _onHistoryChange(callback, isPageLoad) {\n        let nextState;\n        if (isPageLoad) nextState = XState.fromLocation('#');\n        else nextState = XState.fromLocation();\n        if (nextState.isEqual(this.currState)) return;\n        const isNavigateBack = (nextState.isEqual(this.prevState));\n        this.prevState = this.currState;\n        this.currState = nextState;\n        callback(nextState, this.prevState, isNavigateBack);\n    }\n\n    static launch() { window.addEventListener('load', () => new this()); }\n}\n\n// Todo: Fix kind of animations when using back and forward buttons in whatever order\n// Todo Fix general page layout (Firefox bugs, absolute positioning)","import XScreen from './x-screen.js';\nexport default class XScreenFit extends XScreen {\n    styles() { return ['x-screen-fit'] }\n}","import XScreenFit from './x-screen-fit.js';\nexport default class XAppScreen extends XScreenFit {\n\tget __tagName() { return 'body' }\n\n\t_animateEntry() {} // Overwritten from XScreenFit\n}","import XScreen from '/elements/x-screen/x-screen.js';\n\nexport default class ScreenWelcome extends XScreen {\n    html() {\n        return `\n            <nimiq-logo large>Nimiq Activation</nimiq-logo>\n            <h1>Welcome to Nimiq Activation</h1>\n            <h2>The Nimiq Activation Tool will help guide you through the process of activating your Genesis Nimiq (NIM) from NET.</h2>\n            <a button href=\"#terms\">View Terms</a>\n        `\n    }\n}","import XScreen from '/elements/x-screen/x-screen.js';\n\nexport default class ScreenTerms extends XScreen {\n    html() {\n        return `\n\t\t    <h1>Activation Terms</h1>\n\t\t    <h2>Please read the following terms carefully</h2>\n\t\t    <section>\n\t\t    \t<h3>Heading 1</h3>\n\t\t    \t<p>\n\t\t    \t\tLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\t\t    \t</p>\n\t\t    \t<h3>Heading 2</h3>\n\t\t    \t<p>\n\t\t    \t\tLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\t\t    \t</p>\n\t\t    \t<h3>Heading 3</h3>\n\t\t    \t<p>\n\t\t    \t\tLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\t\t    \t</p>\n\t\t    \t<div class=\"same-size-buttons\">\n\t\t\t\t    <a id=\"disagree\" button class=\"small fixed-size secondary\" href=\"https://www.nimiq.com\">I Disagree</a>\n\t\t\t\t    <a id=\"agree\" button class=\"small fixed-size\" href=\"#form-handler\">I Agree</a>\n\t\t\t\t</div>\n\t\t    </section>\n\t\t`\n    }\n}\n","export default class ActivationUtils {\n    static get API_ROOT() { return 'https://activate.nimiq-network.com' }\n\n    /** @param {string} ethAddress\n     *  @return {Promise<number>}*/\n    static async fetchBalance(ethAddress) {\n        const response = await fetch(`https://api.etherscan.io/api?module=account&action=tokenbalance&contractaddress=0xcfb98637bcae43C13323EAa1731cED2B716962fD&tag=latest&address=${ethAddress}`)\n        return (await response.json()).result;\n    }\n\n    /** @param {string | Nimiq.Address} address \n     * @return {Promise<string>} */\n    static async nim2ethAddress(address) {\n        const addressObj = (typeof address  === 'string') ? ActivationUtils.getUnfriendlyAddress(address) : address;\n        const hash = await Nimiq.Hash.sha256(addressObj.serialize());\n        return '0x' + Nimiq.BufferUtils.toHex(hash.subarray(0, 20));\n    }\n\n    /** @param {string} friendlyAddress */\n    static getUnfriendlyAddress(friendlyAddress) {\n        return Nimiq.Address.fromUserFriendlyAddress(friendlyAddress);\n    }\n\n    /** @param {string} dashboardToken */\n    async getDashboardData(dashboardToken) {\n        try {\n            const request = fetch(\n                `${ActivationUtils.API_ROOT}/list/${dashboardToken}`,\n                { method: 'GET' }\n            );\n\n            const result = await request.then(response => {\n                if (!response.ok) {\n                    this.onDashboardTokenError();\n                } else {\n                    return response.json();\n                }\n            });\n\n            if (result) {\n                this.onDashboardDataResult(result);\n            } \n        } catch(e) {\n            this.onDashboardTokenError();\n        }\n    }\n\n\n    /** @param {string} activationToken */\n    async isValidToken(activationToken) {\n        const request = fetch(\n            `${ActivationUtils.API_ROOT}/activate/${activationToken}`,\n            { method: 'GET' }\n        );\n        try {\n            const response = await request;\n            this.onIsValidToken(response.ok);\n        } catch (e) {\n            this.onIsValidToken(false);\n        }\n    }\n\n    /** @param {string} activationToken\n     * @param {string} nimiqAddress */\n    async activateAddress(activationToken, nimiqAddress) {\n        const request = fetch(\n            `${ActivationUtils.API_ROOT}/activate/address`,\n            { \n                method: 'POST',\n                body: JSON.stringify({\n                    'activation_token': activationToken,\n                    'nimiq_address': nimiqAddress\n                }),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n            }\n        );\n\n        const response = await request;\n        this.onActivateAddress(response.ok);\n    }\n\n    /** @param {{birthday: Date, city: string, country_residence: string, country_nationality: string, email: string, sex: string, first_name: string, last_name: string, street: string, zip: string }} kycData */\n    async submitKyc(kycData) {\n        const request = fetch(\n            `${ActivationUtils.API_ROOT}/submit`,\n            {\n                method: 'POST',\n                body: JSON.stringify(kycData),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            }\n        );\n\n        const response = await request;\n        if (response.ok) {\n            this.onKycSuccess(await response.json());\n        }\n        else {\n            this.onKycError(response.status);\n        }\n    }\n}","import XElement from \"/libraries/x-element/x-element.js\";\nimport ActivationUtils from \"/libraries/nimiq-utils/activation-utils/activation-utils.js\";\n\nexport default class XActivationUtils extends XElement {\n    onCreate() {\n        this._api = new ActivationToolsWrapper(this);\n    }\n}\n\nclass ActivationToolsWrapper extends ActivationUtils {\n    constructor(element) {\n        super();\n        this._element = element;\n    }\n\n    onDashboardDataResult(response) {\n        this._element.fire('x-activation-dashboard-data', response);\n    }\n\n    onDashboardTokenError() {\n        this._element.fire('x-activation-dashboard-token-error');\n    }\n\n    onIsValidToken(response) {\n        this._element.fire('x-activation-valid-token', response);\n    }\n\n    onWalletCreated(response) {\n        this._element.fire('x-activation-wallet-created', response);\n    }\n    \n    onActivateAddress(response) {\n        this._element.fire('x-activation-activate-address', response);\n    }\n\n    onKycSuccess(response) {\n        this._element.fire('x-activation-post-success', response);\n    }\n\n    onKycError(errorCode) {\n        this._element.fire('x-activation-post-error', errorCode);\n    }\n}","import XScreen from '../x-screen/x-screen.js';\nexport default class ScreenError extends XScreen {\n    html() {\n        return `\n            <img src=\"/elements/screen-error/screen-error.svg\">\n            <h1>Error</h1>\n            <h2>Unfortunately we don't know the reason</h2>\n        `\n    }\n\n    onCreate() {\n        this.$h2 = this.$('h2');\n        const message = this.$el.getAttribute('message');\n        if (message !== undefined) {\n            this.show(message);\n        }\n    }\n\n    show(message) {\n        this.$h2.textContent = message;\n    }\n}","import XElement from '/libraries/x-element/x-element.js';\n\nexport default class XCountrySelect extends XElement {\n    html() {\n        return `\n            <select>\n                <option value=\"\">Select Country</option>\n                <option value=\"AFG\">Afghanistan</option>\n                <option value=\"ALA\">&Aring;land Islands</option>\n                <option value=\"ALB\">Albania</option>\n                <option value=\"DZA\">Algeria</option>\n                <option value=\"ASM\">American Samoa</option>\n                <option value=\"AND\">Andorra</option>\n                <option value=\"AGO\">Angola</option>\n                <option value=\"AIA\">Anguilla</option>\n                <option value=\"ATA\">Antarctica</option>\n                <option value=\"ATG\">Antigua and Barbuda</option>\n                <option value=\"ARG\">Argentina</option>\n                <option value=\"ARM\">Armenia</option>\n                <option value=\"ABW\">Aruba</option>\n                <option value=\"AUS\">Australia</option>\n                <option value=\"AUT\">Austria</option>\n                <option value=\"AZE\">Azerbaijan</option>\n                <option value=\"BHS\">Bahamas</option>\n                <option value=\"BHR\">Bahrain</option>\n                <option value=\"BGD\">Bangladesh</option>\n                <option value=\"BRB\">Barbados</option>\n                <option value=\"BLR\">Belarus</option>\n                <option value=\"BEL\">Belgium</option>\n                <option value=\"BLZ\">Belize</option>\n                <option value=\"BEN\">Benin</option>\n                <option value=\"BMU\">Bermuda</option>\n                <option value=\"BTN\">Bhutan</option>\n                <option value=\"BOL\">Bolivia, Plurinational State of</option>\n                <option value=\"BIH\">Bosnia and Herzegovina</option>\n                <option value=\"BWA\">Botswana</option>\n                <option value=\"BVT\">Bouvet Island</option>\n                <option value=\"BRA\">Brazil</option>\n                <option value=\"IOT\">British Indian Ocean Territory</option>\n                <option value=\"BRN\">Brunei Darussalam</option>\n                <option value=\"BGR\">Bulgaria</option>\n                <option value=\"BFA\">Burkina Faso</option>\n                <option value=\"BDI\">Burundi</option>\n                <option value=\"KHM\">Cambodia</option>\n                <option value=\"CMR\">Cameroon</option>\n                <option value=\"CAN\">Canada</option>\n                <option value=\"CPV\">Cape Verde</option>\n                <option value=\"CYM\">Cayman Islands</option>\n                <option value=\"CAF\">Central African Republic</option>\n                <option value=\"TCD\">Chad</option>\n                <option value=\"CHL\">Chile</option>\n                <option value=\"CHN\">China</option>\n                <option value=\"CXR\">Christmas Island</option>\n                <option value=\"CCK\">Cocos (Keeling) Islands</option>\n                <option value=\"COL\">Colombia</option>\n                <option value=\"COM\">Comoros</option>\n                <option value=\"COG\">Congo</option>\n                <option value=\"COD\">Congo, the Democratic Republic of the</option>\n                <option value=\"COK\">Cook Islands</option>\n                <option value=\"CRI\">Costa Rica</option>\n                <option value=\"CIV\">C&ocirc;te d'Ivoire</option>\n                <option value=\"HRV\">Croatia</option>\n                <option value=\"CUB\">Cuba</option>\n                <option value=\"CYP\">Cyprus</option>\n                <option value=\"CZE\">Czech Republic</option>\n                <option value=\"DNK\">Denmark</option>\n                <option value=\"DJI\">Djibouti</option>\n                <option value=\"DMA\">Dominica</option>\n                <option value=\"DOM\">Dominican Republic</option>\n                <option value=\"ECU\">Ecuador</option>\n                <option value=\"EGY\">Egypt</option>\n                <option value=\"SLV\">El Salvador</option>\n                <option value=\"GNQ\">Equatorial Guinea</option>\n                <option value=\"ERI\">Eritrea</option>\n                <option value=\"EST\">Estonia</option>\n                <option value=\"ETH\">Ethiopia</option>\n                <option value=\"FLK\">Falkland Islands (Malvinas)</option>\n                <option value=\"FRO\">Faroe Islands</option>\n                <option value=\"FJI\">Fiji</option>\n                <option value=\"FIN\">Finland</option>\n                <option value=\"FRA\">France</option>\n                <option value=\"GUF\">French Guiana</option>\n                <option value=\"PYF\">French Polynesia</option>\n                <option value=\"ATF\">French Southern Territories</option>\n                <option value=\"GAB\">Gabon</option>\n                <option value=\"GMB\">Gambia</option>\n                <option value=\"GEO\">Georgia</option>\n                <option value=\"DEU\">Germany</option>\n                <option value=\"GHA\">Ghana</option>\n                <option value=\"GIB\">Gibraltar</option>\n                <option value=\"GRC\">Greece</option>\n                <option value=\"GRL\">Greenland</option>\n                <option value=\"GRD\">Grenada</option>\n                <option value=\"GLP\">Guadeloupe</option>\n                <option value=\"GUM\">Guam</option>\n                <option value=\"GTM\">Guatemala</option>\n                <option value=\"GGY\">Guernsey</option>\n                <option value=\"GIN\">Guinea</option>\n                <option value=\"GNB\">Guinea-Bissau</option>\n                <option value=\"GUY\">Guyana</option>\n                <option value=\"HTI\">Haiti</option>\n                <option value=\"HMD\">Heard Island and McDonald Islands</option>\n                <option value=\"VAT\">Holy See (Vatican City State)</option>\n                <option value=\"HND\">Honduras</option>\n                <option value=\"HKG\">Hong Kong</option>\n                <option value=\"HUN\">Hungary</option>\n                <option value=\"ISL\">Iceland</option>\n                <option value=\"IND\">India</option>\n                <option value=\"IDN\">Indonesia</option>\n                <option value=\"IRN\">Iran, Islamic Republic of</option>\n                <option value=\"IRQ\">Iraq</option>\n                <option value=\"IRL\">Ireland</option>\n                <option value=\"IMN\">Isle of Man</option>\n                <option value=\"ISR\">Israel</option>\n                <option value=\"ITA\">Italy</option>\n                <option value=\"JAM\">Jamaica</option>\n                <option value=\"JPN\">Japan</option>\n                <option value=\"JEY\">Jersey</option>\n                <option value=\"JOR\">Jordan</option>\n                <option value=\"KAZ\">Kazakhstan</option>\n                <option value=\"KEN\">Kenya</option>\n                <option value=\"KIR\">Kiribati</option>\n                <option value=\"PRK\">Korea, Democratic People's Republic of</option>\n                <option value=\"KOR\">Korea, Republic of</option>\n                <option value=\"KWT\">Kuwait</option>\n                <option value=\"KGZ\">Kyrgyzstan</option>\n                <option value=\"LAO\">Lao People's Democratic Republic</option>\n                <option value=\"LVA\">Latvia</option>\n                <option value=\"LBN\">Lebanon</option>\n                <option value=\"LSO\">Lesotho</option>\n                <option value=\"LBR\">Liberia</option>\n                <option value=\"LBY\">Libyan Arab Jamahiriya</option>\n                <option value=\"LIE\">Liechtenstein</option>\n                <option value=\"LTU\">Lithuania</option>\n                <option value=\"LUX\">Luxembourg</option>\n                <option value=\"MAC\">Macao</option>\n                <option value=\"MKD\">Macedonia, the former Yugoslav Republic of</option>\n                <option value=\"MDG\">Madagascar</option>\n                <option value=\"MWI\">Malawi</option>\n                <option value=\"MYS\">Malaysia</option>\n                <option value=\"MDV\">Maldives</option>\n                <option value=\"MLI\">Mali</option>\n                <option value=\"MLT\">Malta</option>\n                <option value=\"MHL\">Marshall Islands</option>\n                <option value=\"MTQ\">Martinique</option>\n                <option value=\"MRT\">Mauritania</option>\n                <option value=\"MUS\">Mauritius</option>\n                <option value=\"MYT\">Mayotte</option>\n                <option value=\"MEX\">Mexico</option>\n                <option value=\"FSM\">Micronesia, Federated States of</option>\n                <option value=\"MDA\">Moldova, Republic of</option>\n                <option value=\"MCO\">Monaco</option>\n                <option value=\"MNG\">Mongolia</option>\n                <option value=\"MNE\">Montenegro</option>\n                <option value=\"MSR\">Montserrat</option>\n                <option value=\"MAR\">Morocco</option>\n                <option value=\"MOZ\">Mozambique</option>\n                <option value=\"MMR\">Myanmar</option>\n                <option value=\"NAM\">Namibia</option>\n                <option value=\"NRU\">Nauru</option>\n                <option value=\"NPL\">Nepal</option>\n                <option value=\"NLD\">Netherlands</option>\n                <option value=\"ANT\">Netherlands Antilles</option>\n                <option value=\"NCL\">New Caledonia</option>\n                <option value=\"NZL\">New Zealand</option>\n                <option value=\"NIC\">Nicaragua</option>\n                <option value=\"NER\">Niger</option>\n                <option value=\"NGA\">Nigeria</option>\n                <option value=\"NIU\">Niue</option>\n                <option value=\"NFK\">Norfolk Island</option>\n                <option value=\"MNP\">Northern Mariana Islands</option>\n                <option value=\"NOR\">Norway</option>\n                <option value=\"OMN\">Oman</option>\n                <option value=\"PAK\">Pakistan</option>\n                <option value=\"PLW\">Palau</option>\n                <option value=\"PSE\">Palestinian Territory, Occupied</option>\n                <option value=\"PAN\">Panama</option>\n                <option value=\"PNG\">Papua New Guinea</option>\n                <option value=\"PRY\">Paraguay</option>\n                <option value=\"PER\">Peru</option>\n                <option value=\"PHL\">Philippines</option>\n                <option value=\"PCN\">Pitcairn</option>\n                <option value=\"POL\">Poland</option>\n                <option value=\"PRT\">Portugal</option>\n                <option value=\"PRI\">Puerto Rico</option>\n                <option value=\"QAT\">Qatar</option>\n                <option value=\"REU\">R&eacute;union</option>\n                <option value=\"ROU\">Romania</option>\n                <option value=\"RUS\">Russian Federation</option>\n                <option value=\"RWA\">Rwanda</option>\n                <option value=\"BLM\">Saint Barth&eacute;lemy</option>\n                <option value=\"SHN\">Saint Helena, Ascension and Tristan da Cunha</option>\n                <option value=\"KNA\">Saint Kitts and Nevis</option>\n                <option value=\"LCA\">Saint Lucia</option>\n                <option value=\"MAF\">Saint Martin (French part)</option>\n                <option value=\"SPM\">Saint Pierre and Miquelon</option>\n                <option value=\"VCT\">Saint Vincent and the Grenadines</option>\n                <option value=\"WSM\">Samoa</option>\n                <option value=\"SMR\">San Marino</option>\n                <option value=\"STP\">Sao Tome and Principe</option>\n                <option value=\"SAU\">Saudi Arabia</option>\n                <option value=\"SEN\">Senegal</option>\n                <option value=\"SRB\">Serbia</option>\n                <option value=\"SYC\">Seychelles</option>\n                <option value=\"SLE\">Sierra Leone</option>\n                <option value=\"SGP\">Singapore</option>\n                <option value=\"SVK\">Slovakia</option>\n                <option value=\"SVN\">Slovenia</option>\n                <option value=\"SLB\">Solomon Islands</option>\n                <option value=\"SOM\">Somalia</option>\n                <option value=\"ZAF\">South Africa</option>\n                <option value=\"SGS\">South Georgia and the South Sandwich Islands</option>\n                <option value=\"ESP\">Spain</option>\n                <option value=\"LKA\">Sri Lanka</option>\n                <option value=\"SDN\">Sudan</option>\n                <option value=\"SUR\">Suriname</option>\n                <option value=\"SJM\">Svalbard and Jan Mayen</option>\n                <option value=\"SWZ\">Swaziland</option>\n                <option value=\"SWE\">Sweden</option>\n                <option value=\"CHE\">Switzerland</option>\n                <option value=\"SYR\">Syrian Arab Republic</option>\n                <option value=\"TWN\">Taiwan, Province of China</option>\n                <option value=\"TJK\">Tajikistan</option>\n                <option value=\"TZA\">Tanzania, United Republic of</option>\n                <option value=\"THA\">Thailand</option>\n                <option value=\"TLS\">Timor-Leste</option>\n                <option value=\"TGO\">Togo</option>\n                <option value=\"TKL\">Tokelau</option>\n                <option value=\"TON\">Tonga</option>\n                <option value=\"TTO\">Trinidad and Tobago</option>\n                <option value=\"TUN\">Tunisia</option>\n                <option value=\"TUR\">Turkey</option>\n                <option value=\"TKM\">Turkmenistan</option>\n                <option value=\"TCA\">Turks and Caicos Islands</option>\n                <option value=\"TUV\">Tuvalu</option>\n                <option value=\"UGA\">Uganda</option>\n                <option value=\"UKR\">Ukraine</option>\n                <option value=\"ARE\">United Arab Emirates</option>\n                <option value=\"GBR\">United Kingdom</option>\n                <option value=\"USA\">United States</option>\n                <option value=\"UMI\">United States Minor Outlying Islands</option>\n                <option value=\"URY\">Uruguay</option>\n                <option value=\"UZB\">Uzbekistan</option>\n                <option value=\"VUT\">Vanuatu</option>\n                <option value=\"VEN\">Venezuela, Bolivarian Republic of</option>\n                <option value=\"VNM\">Viet Nam</option>\n                <option value=\"VGB\">Virgin Islands, British</option>\n                <option value=\"VIR\">Virgin Islands, U.S.</option>\n                <option value=\"WLF\">Wallis and Futuna</option>\n                <option value=\"ESH\">Western Sahara</option>\n                <option value=\"YEM\">Yemen</option>\n                <option value=\"ZMB\">Zambia</option>\n                <option value=\"ZWE\">Zimbabwe</option>\n            </select>\n        `\n    }\n\n    onCreate() {\n        this.$select = this.$('select');\n        const name = this.$el.getAttribute('name');\n        const required = this.$el.getAttribute('required');\n        this.$select.setAttribute('name', name);\n        this.$select.setAttribute('required', required);\n    }\n}\n\n// Todo: Remove disallowed countries","import XElement from '/libraries/x-element/x-element.js';\n\nexport default class XDateofbirthSelect extends XElement {\n    html() {\n        return `\n            <input type=\"hidden\">\n            <select>\n                <option value=\"\">Year</option>\n                <option>2018</option>\n                <option>2017</option>\n                <option>2016</option>\n                <option>2015</option>\n                <option>2014</option>\n                <option>2013</option>\n                <option>2012</option>\n                <option>2011</option>\n                <option>2010</option>\n                <option>2009</option>\n                <option>2008</option>\n                <option>2007</option>\n                <option>2006</option>\n                <option>2005</option>\n                <option>2004</option>\n                <option>2003</option>\n                <option>2002</option>\n                <option>2001</option>\n                <option>2000</option>\n                <option>1999</option>\n                <option>1998</option>\n                <option>1997</option>\n                <option>1996</option>\n                <option>1995</option>\n                <option>1994</option>\n                <option>1993</option>\n                <option>1992</option>\n                <option>1991</option>\n                <option>1990</option>\n                <option>1989</option>\n                <option>1988</option>\n                <option>1987</option>\n                <option>1986</option>\n                <option>1985</option>\n                <option>1984</option>\n                <option>1983</option>\n                <option>1982</option>\n                <option>1981</option>\n                <option>1980</option>\n                <option>1979</option>\n                <option>1978</option>\n                <option>1977</option>\n                <option>1976</option>\n                <option>1975</option>\n                <option>1974</option>\n                <option>1973</option>\n                <option>1972</option>\n                <option>1971</option>\n                <option>1970</option>\n                <option>1969</option>\n                <option>1968</option>\n                <option>1967</option>\n                <option>1966</option>\n                <option>1965</option>\n                <option>1964</option>\n                <option>1963</option>\n                <option>1962</option>\n                <option>1961</option>\n                <option>1960</option>\n                <option>1959</option>\n                <option>1958</option>\n                <option>1957</option>\n                <option>1956</option>\n                <option>1955</option>\n                <option>1954</option>\n                <option>1953</option>\n                <option>1952</option>\n                <option>1951</option>\n                <option>1950</option>\n                <option>1949</option>\n                <option>1948</option>\n                <option>1947</option>\n                <option>1946</option>\n                <option>1945</option>\n                <option>1944</option>\n                <option>1943</option>\n                <option>1942</option>\n                <option>1941</option>\n                <option>1940</option>\n                <option>1939</option>\n                <option>1938</option>\n                <option>1937</option>\n                <option>1936</option>\n                <option>1935</option>\n                <option>1934</option>\n                <option>1933</option>\n                <option>1932</option>\n                <option>1931</option>\n                <option>1930</option>\n                <option>1929</option>\n                <option>1928</option>\n                <option>1927</option>\n                <option>1926</option>\n                <option>1925</option>\n                <option>1924</option>\n                <option>1923</option>\n                <option>1922</option>\n                <option>1921</option>\n                <option>1920</option>\n                <option>1919</option>\n            </select>\n            <select>\n                <option value=\"\">Month</option>\n                <option value=\"01\">Jan</option>\n                <option value=\"02\">Feb</option>\n                <option value=\"03\">Mar</option>\n                <option value=\"04\">Apr</option>\n                <option value=\"05\">May</option>\n                <option value=\"06\">Jun</option>\n                <option value=\"07\">Jul</option>\n                <option value=\"08\">Aug</option>\n                <option value=\"09\">Sep</option>\n                <option value=\"10\">Oct</option>\n                <option value=\"11\">Nov</option>\n                <option value=\"12\">Dec</option>\n            </select>\n            <select>\n                <option value=\"\">Day</option>\n                <option>01</option>\n                <option>02</option>\n                <option>03</option>\n                <option>04</option>\n                <option>05</option>\n                <option>06</option>\n                <option>07</option>\n                <option>08</option>\n                <option>09</option>\n                <option>10</option>\n                <option>11</option>\n                <option>12</option>\n                <option>13</option>\n                <option>14</option>\n                <option>15</option>\n                <option>16</option>\n                <option>17</option>\n                <option>18</option>\n                <option>19</option>\n                <option>20</option>\n                <option>21</option>\n                <option>22</option>\n                <option>23</option>\n                <option>24</option>\n                <option>25</option>\n                <option>26</option>\n                <option>27</option>\n                <option>28</option>\n                <option>29</option>\n                <option>30</option>\n                <option>31</option>\n            </select>\n        `\n    }\n\n    onCreate() {\n        this.$input = this.$('input');\n        this.$$selects = this.$$('select');\n        this.$year = this.$$selects[0];\n        this.$month = this.$$selects[1];\n        this.$day = this.$$selects[2];\n\n        this.addEventListener('change', this._onChange.bind(this));\n\n        const name = this.$el.getAttribute('name');\n        const required = this.$el.getAttribute('required');\n\n        this.$input.setAttribute('name', name);\n\n        this.$year.setAttribute('required', required);\n        this.$month.setAttribute('required', required);\n        this.$day.setAttribute('required', required);\n    }\n\n    _onChange() {\n        this.$input.value = [this.$year.value, this.$month.value, this.$day.value].join('-');\n    }\n}","import XScreenFit from '/elements/x-screen/x-screen-fit.js';\nimport XCountrySelect from './x-country-select/x-country-select.js';\nimport XDateofbirthSelect from './x-dateofbirth-select/x-dateofbirth-select.js';\n\nexport default class ScreenForm extends XScreenFit {\n    html() {\n        return `\n            <h1>Enter your Details</h1>\n            <form>\n                <fieldset>\n                <legend>Please match exactly information of identifying document</legend>\n                <div>\n                <label>Nationality</label>\n                <x-country-select name=\"nationality\" required></x-country-select>\n                </div>\n                <div>\n                    <label for=\"gender\">Salutation</label>\n                    <select name=\"gender\" required>\n                        <option value=\"0\">Mr.</option>\n                        <option value=\"1\">Mrs./Ms.</option>\n                    </select>\n                </div>\n                <div>\n                <label for=\"first_name\">First name(s)</label>\n                <input name=\"first_name\" maxlength=\"100\" placeholder=\"Satoshi\" required />\n                </div>\n                <div>\n                <label for=\"last_name\">Last name(s)</label>\n                <input name=\"last_name\" maxlength=\"100\" placeholder=\"Nakamoto\" required />\n                </div>\n                <div>\n                <label>Date of Birth</label>\n                <x-dateofbirth-select name=\"date_of_birth\" required></x-dateofbirth-select>\n                </div>\n                </fieldset>\n                <fieldset>\n                    <legend>Please provide your current address of residence</legend>\n                <div>\n                <label>Country of Residence</label>\n                <x-country-select name=\"country_of_residence\" required></x-country-select>\n                </div>\n\n                <div>\n                <label>Address</label>\n                <input name=\"address\" maxlength=\"200\" required />\n                </div>\n                <div>\n                <label>City</label>\n                <input name=\"city\" maxlength=\"64\" required />\n                </div>\n                <div>\n                <label>Postal Code</label>\n                <input name=\"postal_code\" maxlength=\"15\" required />\n                </div>\n                </fieldset>\n                <fieldset>\n                <legend>Please provide your personal email address, to which the NIM activation link\n                        will be sent after passing the KYC/AML checks</legend>\n                <div>\n                <label>E-Mail</label>\n                <input name=\"email\" maxlength=\"100\" type=\"email\" placeholder=\"satoshin@gmx.com\" required/>\n                </div>\n                <div>\n                <label>E-Mail confirmation</label>\n                <input name=\"confirm_email\" maxlength=\"100\" type=\"email\" placeholder=\"satoshin@gmx.com\" required/>\n                </div>\n                </fieldset>\n\n                <button type=\"submit\">Submit</button>\n            </form>\n        `\n    }\n\n    children() {\n        return [ [ XCountrySelect ], XDateofbirthSelect ];\n    }\n\n    types() {\n        /** @type {XCountrySelect} */\n        this.$countrySelect = null;\n        /** @type {XDateofbirthSelect} */\n        this.$dateofbirthSelect = null;\n        /** @type {Element} */\n        this.$form = null;\n    }\n\n    onCreate() {\n        this.$form = this.$('form');\n\n        // email validation\n        const $email = this.$('[name=\"email\"]');\n        const $confirm_email = this.$('[name=\"confirm_email\"]');\n\n        const validateEmail = () => {\n            if($email.value != $confirm_email.value) {\n                $confirm_email.setCustomValidity(\"Emails don't match\");\n            } else {\n                $confirm_email.setCustomValidity('');\n            }\n        };\n\n        $email.addEventListener('change', validateEmail);\n        $confirm_email.addEventListener('keyup', validateEmail);\n\n        // disallow paste in email fields\n        $email.addEventListener('paste', e => e.preventDefault());\n        $confirm_email.addEventListener('paste', e => e.preventDefault());\n    }\n\n\n}\n\n// Todo: Show somehow possibility to scroll on Apple?","import XScreenFit from '/elements/x-screen/x-screen-fit.js';\n\nexport default class ScreenConfirm extends XScreenFit {\n\n    html() {\n        return `\n            <h1>Review your Details</h1>\n            <div scroll-container>\n                <fieldset>\n                    <legend>Information of identifying document</legend>\n                    <div>\n                        <label>Nationality</label>\n                        <strong name=\"nationality\"></strong>\n                    </div>\n                    <div>\n                        <label>Salutation</label>\n                        <strong name=\"gender\"></strong>\n                    </div>\n                    <div>\n                        <label>First name(s)</label>\n                        <strong name=\"first_name\"></strong>\n                    </div>\n                    <div>\n                        <label>Last name(s)</label>\n                        <strong name=\"last_name\"></strong>\n                    </div>\n                    <div>\n                        <label>Date of Birth</label>\n                        <strong name=\"date_of_birth\"></strong>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <legend>Your current address of residence</legend>\n                    <div>\n                        <label>Country of Residence</label>\n                        <strong name=\"country_of_residence\"></strong>\n                    </div>\n\n                    <div>\n                        <label>Address</label>\n                        <strong name=\"address\"></strong>\n                    </div>\n                    <div>\n                        <label>City</label>\n                        <strong name=\"city\"></strong>\n                    </div>\n                    <div>\n                        <label>Postal Code</label>\n                        <strong name=\"postal_code\"></strong>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <legend>Your personal email address, to which the NIM activation link\n                            will be sent after passing the KYC/AML checks</legend>\n                    <div>\n                        <label>E-Mail</label>\n                        <strong name=\"email\"></strong>\n                    </div>\n                </fieldset>\n                <button disabled=\"disabled\">Confirm</button>\n                <a secondary href=\"#form-handler\">Back</a>\n            </div>\n        `\n    }\n\n    onCreate() {\n        this.$button = this.$('button');\n\n        this.$nationality = this.$('strong[name=\"nationality\"]');\n        this.$gender = this.$('strong[name=\"gender\"]');\n        this.$first_name = this.$('strong[name=\"first_name\"]');\n        this.$last_name = this.$('strong[name=\"last_name\"]');\n        this.$date_of_birth = this.$('strong[name=\"date_of_birth\"]');\n        this.$country_of_residence = this.$('strong[name=\"country_of_residence\"]');\n        this.$address = this.$('strong[name=\"address\"]');\n        this.$city = this.$('strong[name=\"city\"]');\n        this.$postal_code = this.$('strong[name=\"postal_code\"]');\n        this.$email = this.$('strong[name=\"email\"]');\n\n        this.monthsDict = {\n            '01': 'January',\n            '02': 'February',\n            '03': 'March',\n            '04': 'April',\n            '05': 'May',\n            '06': 'June',\n            '07': 'July',\n            '08': 'August',\n            '09': 'September',\n            '10': 'October',\n            '11': 'November',\n            '12': 'December'\n        };\n\n        this.countriesDict = {\n            \"AFG\": \"Afghanistan\",\n            \"ALA\": \"&#197;land Islands\",\n            \"ALB\": \"Albania\",\n            \"DZA\": \"Algeria\",\n            \"ASM\": \"American Samoa\",\n            \"AND\": \"Andorra\",\n            \"AGO\": \"Angola\",\n            \"AIA\": \"Anguilla\",\n            \"ATA\": \"Antarctica\",\n            \"ATG\": \"Antigua and Barbuda\",\n            \"ARG\": \"Argentina\",\n            \"ARM\": \"Armenia\",\n            \"ABW\": \"Aruba\",\n            \"AUS\": \"Australia\",\n            \"AUT\": \"Austria\",\n            \"AZE\": \"Azerbaijan\",\n            \"BHS\": \"Bahamas\",\n            \"BHR\": \"Bahrain\",\n            \"BGD\": \"Bangladesh\",\n            \"BRB\": \"Barbados\",\n            \"BLR\": \"Belarus\",\n            \"BEL\": \"Belgium\",\n            \"BLZ\": \"Belize\",\n            \"BEN\": \"Benin\",\n            \"BMU\": \"Bermuda\",\n            \"BTN\": \"Bhutan\",\n            \"BOL\": \"Bolivia, Plurinational State of\",\n            \"BIH\": \"Bosnia and Herzegovina\",\n            \"BWA\": \"Botswana\",\n            \"BVT\": \"Bouvet Island\",\n            \"BRA\": \"Brazil\",\n            \"IOT\": \"British Indian Ocean Territory\",\n            \"BRN\": \"Brunei Darussalam\",\n            \"BGR\": \"Bulgaria\",\n            \"BFA\": \"Burkina Faso\",\n            \"BDI\": \"Burundi\",\n            \"KHM\": \"Cambodia\",\n            \"CMR\": \"Cameroon\",\n            \"CAN\": \"Canada\",\n            \"CPV\": \"Cape Verde\",\n            \"CYM\": \"Cayman Islands\",\n            \"CAF\": \"Central African Republic\",\n            \"TCD\": \"Chad\",\n            \"CHL\": \"Chile\",\n            \"CHN\": \"China\",\n            \"CXR\": \"Christmas Island\",\n            \"CCK\": \"Cocos (Keeling) Islands\",\n            \"COL\": \"Colombia\",\n            \"COM\": \"Comoros\",\n            \"COG\": \"Congo\",\n            \"COD\": \"Congo, the Democratic Republic of the\",\n            \"COK\": \"Cook Islands\",\n            \"CRI\": \"Costa Rica\",\n            \"CIV\": \"C&#244;te d'Ivoire\",\n            \"HRV\": \"Croatia\",\n            \"CUB\": \"Cuba\",\n            \"CYP\": \"Cyprus\",\n            \"CZE\": \"Czech Republic\",\n            \"DNK\": \"Denmark\",\n            \"DJI\": \"Djibouti\",\n            \"DMA\": \"Dominica\",\n            \"DOM\": \"Dominican Republic\",\n            \"ECU\": \"Ecuador\",\n            \"EGY\": \"Egypt\",\n            \"SLV\": \"El Salvador\",\n            \"GNQ\": \"Equatorial Guinea\",\n            \"ERI\": \"Eritrea\",\n            \"EST\": \"Estonia\",\n            \"ETH\": \"Ethiopia\",\n            \"FLK\": \"Falkland Islands (Malvinas)\",\n            \"FRO\": \"Faroe Islands\",\n            \"FJI\": \"Fiji\",\n            \"FIN\": \"Finland\",\n            \"FRA\": \"France\",\n            \"GUF\": \"French Guiana\",\n            \"PYF\": \"French Polynesia\",\n            \"ATF\": \"French Southern Territories\",\n            \"GAB\": \"Gabon\",\n            \"GMB\": \"Gambia\",\n            \"GEO\": \"Georgia\",\n            \"DEU\": \"Germany\",\n            \"GHA\": \"Ghana\",\n            \"GIB\": \"Gibraltar\",\n            \"GRC\": \"Greece\",\n            \"GRL\": \"Greenland\",\n            \"GRD\": \"Grenada\",\n            \"GLP\": \"Guadeloupe\",\n            \"GUM\": \"Guam\",\n            \"GTM\": \"Guatemala\",\n            \"GGY\": \"Guernsey\",\n            \"GIN\": \"Guinea\",\n            \"GNB\": \"Guinea-Bissau\",\n            \"GUY\": \"Guyana\",\n            \"HTI\": \"Haiti\",\n            \"HMD\": \"Heard Island and McDonald Islands\",\n            \"VAT\": \"Holy See (Vatican City State)\",\n            \"HND\": \"Honduras\",\n            \"HKG\": \"Hong Kong\",\n            \"HUN\": \"Hungary\",\n            \"ISL\": \"Iceland\",\n            \"IND\": \"India\",\n            \"IDN\": \"Indonesia\",\n            \"IRN\": \"Iran, Islamic Republic of\",\n            \"IRQ\": \"Iraq\",\n            \"IRL\": \"Ireland\",\n            \"IMN\": \"Isle of Man\",\n            \"ISR\": \"Israel\",\n            \"ITA\": \"Italy\",\n            \"JAM\": \"Jamaica\",\n            \"JPN\": \"Japan\",\n            \"JEY\": \"Jersey\",\n            \"JOR\": \"Jordan\",\n            \"KAZ\": \"Kazakhstan\",\n            \"KEN\": \"Kenya\",\n            \"KIR\": \"Kiribati\",\n            \"PRK\": \"Korea, Democratic People's Republic of\",\n            \"KOR\": \"Korea, Republic of\",\n            \"KWT\": \"Kuwait\",\n            \"KGZ\": \"Kyrgyzstan\",\n            \"LAO\": \"Lao People's Democratic Republic\",\n            \"LVA\": \"Latvia\",\n            \"LBN\": \"Lebanon\",\n            \"LSO\": \"Lesotho\",\n            \"LBR\": \"Liberia\",\n            \"LBY\": \"Libyan Arab Jamahiriya\",\n            \"LIE\": \"Liechtenstein\",\n            \"LTU\": \"Lithuania\",\n            \"LUX\": \"Luxembourg\",\n            \"MAC\": \"Macao\",\n            \"MKD\": \"Macedonia, the former Yugoslav Republic of\",\n            \"MDG\": \"Madagascar\",\n            \"MWI\": \"Malawi\",\n            \"MYS\": \"Malaysia\",\n            \"MDV\": \"Maldives\",\n            \"MLI\": \"Mali\",\n            \"MLT\": \"Malta\",\n            \"MHL\": \"Marshall Islands\",\n            \"MTQ\": \"Martinique\",\n            \"MRT\": \"Mauritania\",\n            \"MUS\": \"Mauritius\",\n            \"MYT\": \"Mayotte\",\n            \"MEX\": \"Mexico\",\n            \"FSM\": \"Micronesia, Federated States of\",\n            \"MDA\": \"Moldova, Republic of\",\n            \"MCO\": \"Monaco\",\n            \"MNG\": \"Mongolia\",\n            \"MNE\": \"Montenegro\",\n            \"MSR\": \"Montserrat\",\n            \"MAR\": \"Morocco\",\n            \"MOZ\": \"Mozambique\",\n            \"MMR\": \"Myanmar\",\n            \"NAM\": \"Namibia\",\n            \"NRU\": \"Nauru\",\n            \"NPL\": \"Nepal\",\n            \"NLD\": \"Netherlands\",\n            \"ANT\": \"Netherlands Antilles\",\n            \"NCL\": \"New Caledonia\",\n            \"NZL\": \"New Zealand\",\n            \"NIC\": \"Nicaragua\",\n            \"NER\": \"Niger\",\n            \"NGA\": \"Nigeria\",\n            \"NIU\": \"Niue\",\n            \"NFK\": \"Norfolk Island\",\n            \"MNP\": \"Northern Mariana Islands\",\n            \"NOR\": \"Norway\",\n            \"OMN\": \"Oman\",\n            \"PAK\": \"Pakistan\",\n            \"PLW\": \"Palau\",\n            \"PSE\": \"Palestinian Territory, Occupied\",\n            \"PAN\": \"Panama\",\n            \"PNG\": \"Papua New Guinea\",\n            \"PRY\": \"Paraguay\",\n            \"PER\": \"Peru\",\n            \"PHL\": \"Philippines\",\n            \"PCN\": \"Pitcairn\",\n            \"POL\": \"Poland\",\n            \"PRT\": \"Portugal\",\n            \"PRI\": \"Puerto Rico\",\n            \"QAT\": \"Qatar\",\n            \"REU\": \"R&#233;union\",\n            \"ROU\": \"Romania\",\n            \"RUS\": \"Russian Federation\",\n            \"RWA\": \"Rwanda\",\n            \"BLM\": \"Saint Barth&#233;lemy\",\n            \"SHN\": \"Saint Helena, Ascension and Tristan da Cunha\",\n            \"KNA\": \"Saint Kitts and Nevis\",\n            \"LCA\": \"Saint Lucia\",\n            \"MAF\": \"Saint Martin (French part)\",\n            \"SPM\": \"Saint Pierre and Miquelon\",\n            \"VCT\": \"Saint Vincent and the Grenadines\",\n            \"WSM\": \"Samoa\",\n            \"SMR\": \"San Marino\",\n            \"STP\": \"Sao Tome and Principe\",\n            \"SAU\": \"Saudi Arabia\",\n            \"SEN\": \"Senegal\",\n            \"SRB\": \"Serbia\",\n            \"SYC\": \"Seychelles\",\n            \"SLE\": \"Sierra Leone\",\n            \"SGP\": \"Singapore\",\n            \"SVK\": \"Slovakia\",\n            \"SVN\": \"Slovenia\",\n            \"SLB\": \"Solomon Islands\",\n            \"SOM\": \"Somalia\",\n            \"ZAF\": \"South Africa\",\n            \"SGS\": \"South Georgia and the South Sandwich Islands\",\n            \"ESP\": \"Spain\",\n            \"LKA\": \"Sri Lanka\",\n            \"SDN\": \"Sudan\",\n            \"SUR\": \"Suriname\",\n            \"SJM\": \"Svalbard and Jan Mayen\",\n            \"SWZ\": \"Swaziland\",\n            \"SWE\": \"Sweden\",\n            \"CHE\": \"Switzerland\",\n            \"SYR\": \"Syrian Arab Republic\",\n            \"TWN\": \"Taiwan, Province of China\",\n            \"TJK\": \"Tajikistan\",\n            \"TZA\": \"Tanzania, United Republic of\",\n            \"THA\": \"Thailand\",\n            \"TLS\": \"Timor-Leste\",\n            \"TGO\": \"Togo\",\n            \"TKL\": \"Tokelau\",\n            \"TON\": \"Tonga\",\n            \"TTO\": \"Trinidad and Tobago\",\n            \"TUN\": \"Tunisia\",\n            \"TUR\": \"Turkey\",\n            \"TKM\": \"Turkmenistan\",\n            \"TCA\": \"Turks and Caicos Islands\",\n            \"TUV\": \"Tuvalu\",\n            \"UGA\": \"Uganda\",\n            \"UKR\": \"Ukraine\",\n            \"ARE\": \"United Arab Emirates\",\n            \"GBR\": \"United Kingdom\",\n            \"USA\": \"United States\",\n            \"UMI\": \"United States Minor Outlying Islands\",\n            \"URY\": \"Uruguay\",\n            \"UZB\": \"Uzbekistan\",\n            \"VUT\": \"Vanuatu\",\n            \"VEN\": \"Venezuela, Bolivarian Republic of\",\n            \"VNM\": \"Viet Nam\",\n            \"VGB\": \"Virgin Islands, British\",\n            \"VIR\": \"Virgin Islands, U.S.\",\n            \"WLF\": \"Wallis and Futuna\",\n            \"ESH\": \"Western Sahara\",\n            \"YEM\": \"Yemen\",\n            \"ZMB\": \"Zambia\",\n            \"ZWE\": \"Zimbabwe\"\n        };\n    }\n\n    set(data) {\n        const dob = data.date_of_birth.split('-');\n        dob[1] = this.monthsDict[dob[1]];\n        const human_dob = dob.join(' ');\n\n        this.$nationality.textContent = this._parseHtmlEntities(this.countriesDict[data.nationality]);\n        this.$gender.textContent = data.gender === 0 ? 'Mr.' : 'Mrs.';\n        this.$first_name.textContent = data.first_name;\n        this.$last_name.textContent = data.last_name;\n        this.$date_of_birth.textContent = human_dob;\n        this.$country_of_residence.textContent = this._parseHtmlEntities(this.countriesDict[data.country_of_residence]);\n        this.$address.textContent = data.address;\n        this.$city.textContent = data.city;\n        this.$postal_code.textContent = data.postal_code;\n        this.$email.textContent = data.email;\n\n        // The confirm button is disabled on page-load, to prevent submitting empty\n        // data when reloading the page at the #form-handler/confirm URL.\n        this.$button.removeAttribute('disabled');\n    }\n\n    _parseHtmlEntities(str) {\n        return str.replace(/&#([0-9]{1,3});/gi, function(match, numStr) {\n            var num = parseInt(numStr, 10); // read num as normal number\n            return String.fromCharCode(num);\n        });\n    }\n\n}","import XScreenFit from '../x-screen/x-screen-fit.js';\n\nexport default class ScreenLoading extends XScreenFit {\n    html() {\n        return `\n            <x-loading-animation></x-loading-animation>\n            <h2 content></h2>\n        `\n    }\n}\n","/**\n * Retrieves input data from a form and returns it as a JSON object.\n * @param  {HTMLFormControlsCollection} elements  the form elements\n * @return {Object}                               form data as an object literal\n */\nexport default ({ elements }) => [].reduce.call(elements, (data, element) => {\n\n    // Make sure the element has the required properties and should be added.\n    if (isValidElement(element) && isValidValue(element)) {\n\n        /*\n         * Some fields allow for more than one value, so we need to check if this\n         * is one of those fields and, if so, store the values as an array.\n         */\n        if (isCheckbox(element)) {\n            data[element.name] = (data[element.name] || []).concat(element.value);\n        } else if (isMultiSelect(element)) {\n            data[element.name] = getSelectValues(element);\n        } else {\n            data[element.name] = element.value;\n        }\n    }\n\n    return data;\n}, {});\n\n/**\n * Checks that an element has a non-empty `name` and `value` property.\n * @param  {Element} element  the element to check\n * @return {Bool}             true if the element is an input, false if not\n */\nconst isValidElement = element => {\n    return element.name && element.value;\n};\n\n/**\n * Checks if an element’s value can be saved (e.g. not an unselected checkbox).\n * @param  {Element} element  the element to check\n * @return {Boolean}          true if the value should be added, false if not\n */\nconst isValidValue = element => {\n    return (!['checkbox', 'radio'].includes(element.type) || element.checked);\n};\n\n/**\n * Checks if an input is a checkbox, because checkboxes allow multiple values.\n * @param  {Element} element  the element to check\n * @return {Boolean}          true if the element is a checkbox, false if not\n */\nconst isCheckbox = element => element.type === 'checkbox';\n\n/**\n * Checks if an input is a `select` with the `multiple` attribute.\n * @param  {Element} element  the element to check\n * @return {Boolean}          true if the element is a multiselect, false if not\n */\nconst isMultiSelect = element => element.options && element.multiple;\n\n/**\n * Retrieves the selected options from a multi-select as an array.\n * @param  {HTMLOptionsCollection} options  the options for the select\n * @return {Array}                          an array of selected option values\n */\nconst getSelectValues = options => [].reduce.call(options, (values, option) => {\n    return option.selected ? values.concat(option.value) : values;\n}, []);\n","import XScreen from '/elements/x-screen/x-screen.js';\nimport XActivationUtils from '/elements/x-activation-utils/x-activation-utils.js';\nimport ScreenError from '/elements/screen-error/screen-error.js';\nimport ScreenForm from './screen-form/screen-form.js';\nimport ScreenConfirm from './screen-confirm/screen-confirm.js';\nimport ScreenLoading from '/elements/screen-loading/screen-loading.js';\nimport FormToObject from '/libraries/nimiq-utils/form-to-object/form-to-object.js';\n\nexport default class ScreenFormHandler extends XScreen {\n    html() {\n        return `\n            <x-activation-utils></x-activation-utils>\n            <x-slides>\n                <screen-form></screen-form>\n                <screen-confirm></screen-confirm>\n                <screen-loading>Uploading your data...</screen-loading>\n                <screen-error></screen-error>\n            </x-slides>\n        `\n    }\n\n    types() {\n        /** @type {XActivationUtils} */\n        this.$activationUtils = null;\n        /** @type {ScreenForm} */\n        this.$screenForm = null;\n        /** @type {ScreenConfirm} */\n        this.$screenConfirm = null;\n        /** @type {ScreenError} */\n        this.$screenError = null;\n    }\n\n    children() {\n        return [XActivationUtils, ScreenForm, ScreenConfirm, ScreenLoading, ScreenError];\n    }\n\n    listeners() {\n        return {\n            'x-activation-post-success': '_onPostSuccess',\n            'x-activation-post-error': '_onPostError'\n        }\n    }\n\n    onCreate() {\n        this.$screenForm.$form.addEventListener('submit', this._onFormSubmit.bind(this));\n        this.$screenConfirm.$button.addEventListener('click', this._onConfirmSubmit.bind(this));\n    }\n\n    _onFormSubmit(e) {\n        e.preventDefault();\n        this._data = FormToObject(this.$screenForm.$form);\n        this._data.gender = parseInt(this._data.gender);\n        this.$screenConfirm.set(this._data);\n        this.goTo('confirm');\n    }\n\n    _onConfirmSubmit() {\n        this.goTo('loading');\n        this.$activationUtils._api.submitKyc(this._data);\n    }\n\n    _onPostSuccess({clientRedirectUrl}) {\n        window.location.href = clientRedirectUrl;\n    }\n\n    _onPostError(errorCode) {\n        let message = '';\n        if (errorCode === 401) {\n           message = 'You have to be at least 18 years old.';\n        } else if (errorCode === 403) {\n            message = 'Your data was already used to initiate the KYC process.';\n        }\n        this.$screenError.show(message);\n        this.goTo('error');\n    }\n\n}\n","import XElement from \"/libraries/x-element/x-element.js\";\n\nexport default class XSuccessMark extends XElement {\n    html() {\n        return `\n            <svg class=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 168 168\">\n                <radialGradient id=\"circleFill\" gradientUnits=\"userSpaceOnUse\" gradientTransform=\"translate(-4, -4)\">\n                    <stop offset=\"1\" stop-color=\"transparent\">\n                        <animate dur=\".4s\" attributeName=\"offset\" begin=\"indefinite\" fill=\"freeze\" from=\"1\" to=\"0\"\n                        values=\"1;0\"\n                        keyTimes=\"0;1\"\n                        keySplines=\".42 0 .58 1\"\n                        calcMode=\"spline\" />\n                    </stop>\n                    <stop offset=\"1\" stop-color=\"#64FFDA\">\n                        <animate dur=\".4s\" attributeName=\"offset\" begin=\"indefinite\" fill=\"freeze\" from=\"1\" to=\"0\"\n                        values=\"1;0\"\n                        keyTimes=\"0;1\"\n                        keySplines=\".42 0 .58 1\"\n                        calcMode=\"spline\" />\n                    </stop>\n                </radialGradient>\n                <path class=\"checkmark__circle\" d=\"M88.1247411,2.6381084 L142.907644,34.2670322 C147.858061,37.125157 150.907644,42.4071893 150.907644,48.1234387 L150.907644,111.381286 C150.907644,117.097536 147.858061,122.379568 142.907644,125.237693 L88.1247411,156.866617 C83.1743239,159.724741 77.0751584,159.724741 72.1247411,156.866617 L17.3418381,125.237693 C12.3914209,122.379568 9.34183808,117.097536 9.34183808,111.381286 L9.34183808,48.1234387 C9.34183808,42.4071893 12.3914209,37.125157 17.3418381,34.2670322 L72.1247411,2.6381084 C77.0751584,-0.220016318 83.1743239,-0.220016318 88.1247411,2.6381084 Z\" fill=\"url(#circleFill)\" transform=\"translate(84.124741, 79.752363) rotate(30.000000) translate(-80.124741, -79.752363)\"></path>\n                <path class=\"checkmark__check\" fill=\"none\" d=\"M42.3 81.6l21.3 21.6 50.1-50.4\" transform=\"translate(4, 4)\" />\n            </svg>`;\n    }\n\n    onCreate() {\n        this.$$animate = this.$$('animate');\n    }\n\n    animate() {\n        this.$el.classList.add('animate-success-mark');\n        setTimeout(() => this.$$animate.forEach(el => el.beginElement()), 400);\n        return new Promise(resolve => setTimeout(resolve, 1500))\n    }\n}\n","import XScreenFit from '../x-screen/x-screen-fit.js';\nimport XSuccessMark from '../x-success-mark/x-success-mark.js';\nexport default class ScreenSuccess extends XScreenFit {\n    html() {\n        return `\n            <x-success-mark></x-success-mark>\n            <h2 content></h2>\n        `\n    }\n\n    children() { return [XSuccessMark] }\n\n    _onEntry() {\n        return this.$successMark.animate();\n    }\n\n    onCreate() {\n        this.$h2 = this.$('h2');\n    }\n\n    show(message) {\n        this.$h2.textContent = message;\n    }\n}","import XScreen from '/elements/x-screen/x-screen.js';\nimport XActivationUtils from '/elements/x-activation-utils/x-activation-utils.js';\nimport ScreenLoading from '/elements/screen-loading/screen-loading.js';\nimport ScreenError from '/elements/screen-error/screen-error.js';\n\nexport default class ScreenProceed extends XScreen {\n    html() {\n        return `\n            <screen-loading>Generate new token and redirect...</screen-loading>\n            <screen-error message=\"Could not proceed\"></screen-error>\n            <x-activation-utils></x-activation-utils>\n        `\n    }\n\n    children() { return [ScreenLoading, ScreenError, XActivationUtils]; }\n\n    types() {\n        /** @type {ScreenLoading} */\n        this.$screenLoading = null;\n        /** @type {XActivationUtils} */\n        this.$activationUtils = null;\n    }\n\n    _onEntry() {\n        const params = new URLSearchParams(window.location.search);\n        // Todo tba\n        //this.$activationUtils._api.proceed(params);\n    }\n\n    /** @param {string} redirectUrl */\n    _onPostSuccess(redirectUrl) {\n        window.location.href = redirectUrl;\n    }\n\n    _onPostError() {\n        this.goTo('error');\n    }\n}","import XAppScreen from '/elements/x-screen/x-app-screen.js';\nimport ScreenWelcome from '../screen-welcome/screen-welcome.js';\nimport ScreenTerms from '../screen-terms/screen-terms.js';\nimport ScreenFormHandler from '../screen-form-handler/screen-form-handler.js';\nimport ScreenSuccess from '/elements/screen-success/screen-success.js';\nimport ScreenProceed from '../screen-proceed/screen-proceed.js';\nimport ScreenError from '/elements/screen-error/screen-error.js';\n\nexport default class Verify extends XAppScreen {\n    html() {\n        return `\n            <screen-welcome></screen-welcome>\n            <screen-terms></screen-terms>\n            <screen-form-handler></screen-form-handler>\n            <screen-success>Thank you! Soon you will receive an email with further information.</screen-success>\n            <screen-proceed></screen-proceed>\n            <screen-error message=\"The Safari browser and iOS devices are not supported by our external service providers. Please use another browser or device.\"></screen-error>\n            <screen-error route=\"kyc-error\" message=\"Thank you! Soon you will receive an email with further information.\"></screen-error>\n        `\n    }\n\n    /** Just for typing. Can't do this in constructor because children are set in super(). */\n    types() {\n        /** @type {ScreenWelcome} */\n        this.$screenWelcome = null;\n        /** @type {ScreenTerms} */\n        this.$screenTerms = null;\n        /** @type {ScreenForm} */\n        this.$screenFormHandler = null;\n        /** @type {ScreenSuccess} */\n        this.$screenSuccess = null;\n        /** @tpye {ScreenProceed} */\n        this.$screenProceed = null;\n        /** @type {ScreenError} */\n        this.$screenError = null;\n    }\n\n    children() {\n        return [\n            ScreenWelcome,\n            ScreenTerms,\n            ScreenFormHandler,\n            ScreenSuccess,\n            ScreenProceed,\n            [ ScreenError ]\n        ]\n    }\n\n    _onEntry() {\n        const ua = navigator.userAgent.toLowerCase();\n        const iOS = !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform);\n        const safari = ua.includes('safari') && !ua.includes('chrome');\n        if (iOS || safari) {\n            this.goTo('error');\n        }\n    }\n}\n\nVerify.launch();\n\n// Todo: No safari, no iOS"],"names":[],"mappings":"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"}